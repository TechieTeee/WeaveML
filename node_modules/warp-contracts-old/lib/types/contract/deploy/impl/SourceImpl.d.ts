import { ArWallet } from '../CreateContract';
import { Source } from '../Source';
import { Buffer } from 'redstone-isomorphic';
import { Warp, WarpEnvironment } from '../../../core/Warp';
import { SignatureType } from '../../../contract/Signature';
export interface SourceData {
    src: string | Buffer;
    wasmSrcCodeDir?: string;
    wasmGlueCode?: string;
}
export declare class SourceImpl implements Source {
    private readonly warp;
    private readonly logger;
    private signature;
    constructor(warp: Warp);
    save(contractData: SourceData, env: WarpEnvironment, signature: ArWallet | SignatureType, useBundler?: boolean): Promise<any>;
    private isGoModule;
    private joinBuffers;
    private zipContents;
}
//# sourceMappingURL=SourceImpl.d.ts.map