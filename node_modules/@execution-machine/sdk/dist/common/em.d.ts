import { ContractType, DeployOpts, EmOpts, WriteAction } from "./model";
export declare class Exm {
    private readonly opts;
    constructor(opts: EmOpts);
    changeToken(token: string): void;
    get functions(): {
        writeRaw: <T = any>(functionId: string, writeOps: Array<WriteAction> | WriteAction, ignoreState?: boolean) => Promise<import("./model").WriteOpResult<T>>;
        write: <T_1 = any>(functionId: string, inputs: any | Array<any>, ignoreState?: boolean) => Promise<import("./model").WriteOpResult<T_1>>;
        read: <T_2 = any>(functionId: string) => Promise<import("./model").ReadResult<T_2>>;
        deploy: (contractSrc: Uint8Array, contractInitState: any, contractType: ContractType, opts?: DeployOpts) => Promise<import("./model").DeployOpResult>;
    };
}
