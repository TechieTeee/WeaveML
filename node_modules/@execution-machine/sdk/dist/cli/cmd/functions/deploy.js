"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.functionDeployCmd = void 0;
const fs_1 = require("fs");
const em_wrapper_1 = require("../em-wrapper");
const common_1 = require("../../utils/common");
const commons_1 = require("../../../common/utils/commons");
const Confirm = require('prompt-confirm');
const chalk = require('chalk');
const boxMarks = {
    nw: 'â•­',
    n: 'â”€',
    ne: 'â•®',
    e: 'â”‚',
    se: 'â•¯',
    s: 'â”€',
    sw: 'â•°',
    w: 'â”‚'
};
const functionDeployCmd = async (opts) => {
    let contentType = (0, commons_1.figureOutContractType)(opts.type || opts.src, opts.type !== undefined);
    let initState;
    if (opts.initState) {
        initState = opts.initState;
    }
    else if (opts.initStateSrc) {
        initState = (0, fs_1.readFileSync)(opts.initStateSrc, 'utf8');
    }
    else {
        (0, common_1.error)(`Deployment requires --init-state or --init-state-src to be passed`);
    }
    let contractData;
    if (!opts.token) {
        (0, common_1.error)('EXM Token (--token) is required to deploy functions through EXM');
    }
    if (opts.contractTx) {
        const fetchContractSourceTx = await fetch(`https://arweave.net/${opts.contractTx}`);
        if (fetchContractSourceTx.ok) {
            contractData = new Uint8Array(await fetchContractSourceTx.arrayBuffer());
        }
        else {
            console.error(`Source function transaction ${opts.contractTx} is invalid or does not exist.`);
        }
    }
    else if (opts.src) {
        contractData = await (0, fs_1.readFileSync)(opts.src);
    }
    else {
        (0, common_1.error)(`Deployment requires --contract-tx or --src`);
    }
    const confirmation = await new Confirm(`Do you want to deploy this function?`).run();
    if (confirmation) {
        if (opts.token) {
            em_wrapper_1.em.changeToken(opts.token);
        }
        const Box = require('cli-box');
        const beginDeployment = await em_wrapper_1.em.functions.deploy(contractData, initState, contentType);
        const resultBox = new Box({
            w: 100,
            h: 4,
            stringify: false,
            marks: boxMarks,
            hAlign: 'left',
            vAlign: 'top'
        }, `Function deployed ðŸŽ‰
â–¸ EXM Function ID :   ${beginDeployment.id}
â–¸ EXM Function Source :   https://arweave.net/${beginDeployment.id}
â–¸ Function URL :   https://${beginDeployment.id}.exm.run`);
        console.log(resultBox.stringify());
        const functionUrlExample = new Box({
            w: 100,
            h: 8,
            stringify: false,
            marks: boxMarks,
            hAlign: 'left',
            vAlign: 'top'
        }, `${chalk.blue('Id: ')} ${beginDeployment.id}
        
        curl --location --request POST 'https://${beginDeployment.id}.exm.run'
        --header 'Content-Type: application/json'
        --data-raw '{}' ${chalk.blue('<= Any JSON body')}
        
        Documentation: https://docs.exm.dev/trustless-serverless-functions/function-urls
        `);
        console.log(functionUrlExample.stringify());
    }
};
exports.functionDeployCmd = functionDeployCmd;
//# sourceMappingURL=deploy.js.map